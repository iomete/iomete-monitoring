apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-prometheus-sa
  namespace: {{ .Release.Namespace }}
---
{{- if .Values.clusterRoleAccess.enabled }}
# Cluster-wide access with ClusterRole when enabled
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-prometheus-cluster-role
rules:
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - ''
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
      - configmaps
      - persistentvolumeclaims
      - secrets
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
  - verbs:
      - get
    nonResourceURLs:
      - /metrics
      - /metrics/cadvisor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-prometheus-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-prometheus-cluster-role
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-prometheus-sa
  namespace: {{ .Release.Namespace }}
{{- else }}
# Namespace-scoped access with Role when disabled
{{- range $namespace := (include "monitoring.namespaces" . | splitList " ") }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $.Release.Name }}-prometheus-role
  namespace: {{ $namespace }}
rules:
  - apiGroups: [""]
    resources:
      - services
      - endpoints
      - pods
      - configmaps
      - persistentvolumeclaims
      - secrets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources:
      - jobs
      - cronjobs
    verbs: ["get", "list", "watch"]
  - apiGroups: ["autoscaling"]
    resources:
      - horizontalpodautoscalers
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $.Release.Name }}-prometheus-role-binding
  namespace: {{ $namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $.Release.Name }}-prometheus-role
subjects:
- kind: ServiceAccount
  name: {{ $.Release.Name }}-prometheus-sa
  namespace: {{ $.Release.Namespace }}
{{- end }}
{{- end }}
